%{
  #include<stdio.h>
  #include<stdlib.h>
  #include<string.h>
  extern int k,o,i,ln,s;
  extern int yylex();
  extern int *yyin;
  extern int *yyout;
%}
%token IF ELSE ELSEIF THEN PRINTF AND INTEGER PROC END MSG ID NUM EQQ EQ C SC OP1 OP2 NL
%%
stmt : ID C INTEGER SC NEWLINE PROC BODY END ID {
     printf("\n---------------------------------------\n");
     printf("\nValid\n");
     printf("The number of keywords are :%d\n",k);
     printf("The number of identifiers are :%d\n",i);
     printf("The number of operators are :%d\n",o);
     printf("The number of separators are :%d\n",s);
     printf("------------------------------------------\n");
     exit(0);}
     ;
BODY : ID OP1 ID C INTEGER OP2 NEWLINE PBODY 
     ;
PBODY: ID EQQ NUM SC NEWLINE IF ID EQ NUM AND ID EQ NUM THEN NEWLINE IFBODY END IF SC NEWLINE
        ;
IFBODY: PRINTF OP1 MSG OP2 SC NEWLINE ELSEIF ID EQ NUM AND ID EQ NUM THEN NEWLINE ELSEIFBODY ;
ELSEIFBODY: PRINTF OP1 MSG OP2 SC NEWLINE ELSE NEWLINE S
             ;
S: PRINTF OP1 MSG OP2 SC NEWLINE 
  ;
NEWLINE: NEWLINE NL|NL ;
%%
int yyerror(const char *str)
{
  printf("\nInvalid\n");
  fprintf(stderr,"Error at line %d\n%s\n",ln+1,str);
  exit(0);
}
int main(int argc,char *argv[])
{
  yyin=fopen(argv[1],"r");
  yyparse();

}